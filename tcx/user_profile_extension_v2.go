// user_profile_extension_v2.go: based on the code generated by xsdgen.
// http://www.garmin.com/xmlschemas/UserProfileExtensionv2.xsd

package tcx

import (
	"encoding/xml"
	"time"

	"github.com/sio4/geo/xsd"
)

type AbstractProfileActivityt struct {
	MaximumHeartRateBpm HeartRateInBeatsPerMinutet `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 MaximumHeartRateBpm"`
	RestingHeartRateBpm HeartRateInBeatsPerMinutet `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 RestingHeartRateBpm,omitempty"`
	GearWeightKilograms float64                    `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 GearWeightKilograms"`
	HeartRateZones      []ProfileHeartRateZonet    `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 HeartRateZones"`
	SpeedZones          []ProfileSpeedZonet        `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 SpeedZones"`
	Extensions          xsd.Extensions             `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 Extensions,omitempty"`
}

type BikeDatat struct {
	Name             OptRestrictedTokent `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 Name"`
	OdometerMeters   float64             `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 OdometerMeters"`
	WeightKilograms  float64             `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 WeightKilograms"`
	WheelSize        WheelDatat          `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 WheelSize"`
	Extensions       xsd.Extensions      `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 Extensions,omitempty"`
	HasCadenceSensor bool                `xml:"HasCadenceSensor,attr"`
	HasPowerSensor   bool                `xml:"HasPowerSensor,attr"`
}

// Profile with extensions for new bicycle specific data
type BikeProfileActivityt struct {
	MaximumHeartRateBpm HeartRateInBeatsPerMinutet `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 MaximumHeartRateBpm"`
	RestingHeartRateBpm HeartRateInBeatsPerMinutet `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 RestingHeartRateBpm,omitempty"`
	GearWeightKilograms float64                    `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 GearWeightKilograms"`
	HeartRateZones      []ProfileHeartRateZonet    `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 HeartRateZones"`
	SpeedZones          []ProfileSpeedZonet        `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 SpeedZones"`
	Extensions          xsd.Extensions             `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 Extensions,omitempty"`
	Bike                []BikeDatat                `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 Bike"`
	Sport               Sportt                     `xml:"Sport,attr"`
}

// May be one of Percent Max, Beats Per Minute
type HeartRateTypet string

// May be no more than 15 items long
type OptRestrictedTokent string

// User Activity Profile
type ProfileActivityt struct {
	MaximumHeartRateBpm HeartRateInBeatsPerMinutet `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 MaximumHeartRateBpm"`
	RestingHeartRateBpm HeartRateInBeatsPerMinutet `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 RestingHeartRateBpm,omitempty"`
	GearWeightKilograms float64                    `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 GearWeightKilograms"`
	HeartRateZones      []ProfileHeartRateZonet    `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 HeartRateZones"`
	SpeedZones          []ProfileSpeedZonet        `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 SpeedZones"`
	Extensions          xsd.Extensions             `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 Extensions,omitempty"`
	Sport               Sportt                     `xml:"Sport,attr"`
}

type ProfileDatat struct {
	BirthDate       time.Time                  `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 BirthDate"`
	WeightKilograms float64                    `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 WeightKilograms"`
	Gender          Gendert                    `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 Gender"`
	Activities      []AbstractProfileActivityt `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 Activities,omitempty"`
	TimeStamp       time.Time                  `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 TimeStamp,omitempty"`
	Extensions      xsd.Extensions             `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 Extensions,omitempty"`
}

func (t *ProfileDatat) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	type T ProfileDatat
	var layout struct {
		*T
		BirthDate *xsd.Date     `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 BirthDate"`
		TimeStamp *xsd.DateTime `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 TimeStamp,omitempty"`
	}
	layout.T = (*T)(t)
	layout.BirthDate = (*xsd.Date)(&layout.T.BirthDate)
	layout.TimeStamp = (*xsd.DateTime)(&layout.T.TimeStamp)
	return e.EncodeElement(layout, start)
}

func (t *ProfileDatat) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ProfileDatat
	var overlay struct {
		*T
		BirthDate *xsd.Date     `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 BirthDate"`
		TimeStamp *xsd.DateTime `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 TimeStamp,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.BirthDate = (*xsd.Date)(&overlay.T.BirthDate)
	overlay.TimeStamp = (*xsd.DateTime)(&overlay.T.TimeStamp)
	return d.DecodeElement(&overlay, &start)
}

type ProfileHeartRateZonet struct {
	Number int                        `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 Number"`
	ViewAs HeartRateTypet             `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 ViewAs"`
	Low    HeartRateInBeatsPerMinutet `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 Low"`
	High   HeartRateInBeatsPerMinutet `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 High"`
}

type ProfileSpeedZonet struct {
	Number int              `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 Number"`
	Name   RestrictedTokent `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 Name,omitempty"`
	Value  CustomSpeedZonet `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 Value"`
}

type WheelDatat struct {
	SizeMillimeters int            `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 SizeMillimeters"`
	Extensions      xsd.Extensions `xml:"http://www.garmin.com/xmlschemas/UserProfile/v2 Extensions,omitempty"`
	AutoWheelSize   bool           `xml:"AutoWheelSize,attr"`
}
